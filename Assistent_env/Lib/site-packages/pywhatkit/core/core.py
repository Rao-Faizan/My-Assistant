import os
import pathlib
import platform
import subprocess
import time
import requests

from urllib.parse import quote
from webbrowser import open as open_url
from pyautogui import click, hotkey, press, size, typewrite
from pywhatkit.core.exceptions import InternetException

WIDTH, HEIGHT = size()


def check_number(number: str) -> bool:
    """Check if number contains country code or underscore (group invite)."""
    return "+" in number or "_" in number


def close_tab(wait_time: int = 2) -> None:
    """Close the currently opened browser tab."""
    time.sleep(wait_time)
    os_name = platform.system().lower()
    if os_name in ("windows", "linux"):
        hotkey("ctrl", "w")
    elif os_name == "darwin":
        hotkey("command", "w")
    else:
        raise Warning(f"{os_name} not supported!")
    press("enter")


def check_connection() -> None:
    """Check if the system is connected to the internet."""
    try:
        os_name = platform.system().lower()
        if os_name == "windows":
            subprocess.check_call(["ping", "-n", "1", "8.8.8.8"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        else:
            subprocess.check_call(["ping", "-c", "1", "8.8.8.8"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    except subprocess.CalledProcessError:
        raise InternetException("No Internet Connection. Please check your network!")


def _web(receiver: str, message: str) -> None:
    """Open WhatsApp Web with receiver and message."""
    if check_number(receiver):
        open_url(f"https://web.whatsapp.com/send?phone={receiver}&text={quote(message)}")
    else:
        open_url(f"https://web.whatsapp.com/accept?code={receiver}")


def send_message(message: str, receiver: str, wait_time: int) -> None:
    """Send a text message to WhatsApp contact or group."""
    _web(receiver=receiver, message=message)
    time.sleep(7)
    click(WIDTH / 2, HEIGHT / 2)
    time.sleep(max(1, wait_time - 7))
    if not check_number(receiver):
        for char in message:
            if char == "\n":
                hotkey("shift", "enter")
            else:
                typewrite(char)
    press("enter")


def copy_image(path: str) -> None:
    """Copy image to clipboard based on OS."""
    os_name = platform.system().lower()
    ext = pathlib.Path(path).suffix.lower()

    if os_name == "linux":
        if ext in [".png"]:
            os.system(f"copyq copy image/png - < {path}")
        elif ext in [".jpg", ".jpeg"]:
            os.system(f"copyq copy image/jpeg - < {path}")
        else:
            raise Exception(f"File format {ext} is not supported!")
    elif os_name == "windows":
        from io import BytesIO
        import win32clipboard
        from PIL import Image

        image = Image.open(path)
        output = BytesIO()
        image.convert("RGB").save(output, "BMP")
        data = output.getvalue()[14:]
        output.close()
        win32clipboard.OpenClipboard()
        win32clipboard.EmptyClipboard()
        win32clipboard.SetClipboardData(win32clipboard.CF_DIB, data)
        win32clipboard.CloseClipboard()
    elif os_name == "darwin":
        if ext in [".jpg", ".jpeg"]:
            os.system(f"osascript -e 'set the clipboard to (read (POSIX file \"{path}\") as JPEG picture)'")
        else:
            raise Exception(f"File format {ext} not supported on macOS!")
    else:
        raise Exception(f"Unsupported system: {os_name}")


def send_image(path: str, caption: str, receiver: str, wait_time: int) -> None:
    """Send an image to WhatsApp contact or group."""
    _web(receiver=receiver, message=caption)
    time.sleep(7)
    click(WIDTH / 2, HEIGHT / 2)
    time.sleep(max(1, wait_time - 7))
    copy_image(path=path)

    if not check_number(receiver):
        for char in caption:
            if char == "\n":
                hotkey("shift", "enter")
            else:
                typewrite(char)
    else:
        typewrite(" ")

    if platform.system().lower() == "darwin":
        hotkey("command", "v")
    else:
        hotkey("ctrl", "v")

    time.sleep(1)
    press("enter")
